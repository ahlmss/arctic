# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# NOTE: This file must be located in the same directory as setup.py.
# Usage: Use tox to create and test multiple Python virtual environments
#    as defined in setup.py and .travis.yml.  When you run `tox` without
#    arguments it will create dev27, dev36, and dev37 in the /.tox directory
#    directory and run both `setup.py test` and `pycodestyle arctic`
# Note: Once these virtual environments are run they can be used as the
#    development environment by setting the IDE python interpreter accordingly.
# Single tox Runs:
#    (.venv) $ tox -e dev27     # just run Python 2.7 tests amd pycodestyle
#    (.venv) $ tox -e dev36     # just run Python 3.6 tests amd pycodestyle
#    (.venv) $ tox -e dev37     # just run Python 3.7 tests amd pycodestyle
# Optional tox Runs:
#    (.venv) $ tox -e tests_style27
#    (.venv) $ tox -e tests_style36
#    (.venv) $ tox -e tests_style37
# Warning: setup.py test is deprecated and will be removed in a future version.
#    It would be better to port testing to tox and remove it from the setup.py.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[tox]
envlist = dev{27,36,37}
skip_missing_interpreters = True

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# configuration prescribed by `docs/contributing.md` and `.travis.yml`
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[testenv]
skipsdist = True
basepython =
    dev27: python2.7
    dev36: python3.6
    dev37: python3.7
    tests_style27: python2.7
    tests_style36: python3.6
    tests_style37: python3.7
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv = *

deps =
    pycodestyle
    pip
    python-dateutil
    pytz
    tzlocal
    pymongo
    numpy
    pandas
    decorator
    enum34
    lz4
    mock
    mockextras
    pytest
    pytest-cov
    pytest-server-fixtures
    pytest-timeout
    pytest-xdist<=1.26
    setuptools-git

commands =
    pip install --upgrade pip
    pip install python-dateutil --upgrade
    pip install pytz --upgrade
    pip install tzlocal --upgrade
    pip install pymongo --upgrade
    pip install numpy --upgrade
    pip install pandas --upgrade
    pip install decorator --upgrade
    pip install enum34 --upgrade
    pip install lz4 --upgrade
    pip install mock --upgrade
    pip install mockextras
    pip install pytest --upgrade
    pip install pytest-cov --upgrade
    pip install pytest-server-fixtures --upgrade
    pip install pytest-timeout --upgrade
    pip install setuptools-git --upgrade
    pip freeze
    python setup.py develop
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# (.venv) $ tox -e dev27
# -----------------------------------------------------------------------------
[testenv:dev27]
deps =
    {[testenv]deps}
usedevelop = True
commands =
    python -c 'print((80*"~")+"\ntestenv:dev-{basepython}\n"+(80*"~"))'
    python -c "print(r'{envpython}')"
    pip install pandas==0.22.0
    python setup.py test --pytest-args=-v
    pycodestyle arctic
    python -m pip list --format=columns
    python -c 'print((80*"~")+"\requirements-dev-{basepython}\n"+(80*"~"))'
    pip freeze

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# (.venv) $ tox -e dev36
# or
# (.venv) $ tox -e dev37
# -----------------------------------------------------------------------------
[testenv:dev{36,37}]
deps = {[testenv]deps}
usedevelop = True
commands =
    python -c 'print((80*"~")+"\ntestenv:dev-{basepython}\n"+(80*"~"))'
    python -c "print(r'{envpython}')"
    python setup.py test --pytest-args=-v
    pycodestyle arctic
    python -m pip list --format=columns
    python -c 'print((80*"~")+"\requirements-dev-{basepython}\n"+(80*"~"))'
    pip freeze

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# (.venv) $ tox -e tests_style27
# (.venv) $ tox -e tests_style36
# or
# (.venv) $ tox -e tests_style37
# -----------------------------------------------------------------------------
[testenv:tests_style{27,36,37}]
deps = {[testenv]deps}
usedevelop = True
commands =
    python -c 'print((80*"~")+"\ntestenv:tests_style-{basepython}\n"+(80*"~"))'
    pycodestyle tests

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
