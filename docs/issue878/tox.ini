# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# NOTE: This file must be located in the same directory as setup.py.
# Usage: Use tox to create and test multiple Python virtual environments
#        as defined in setup.py.  The default `tox` run will only run tests
#        (i.e., the style runs must be run individually).
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[tox]
envlist= dev{27,36}
skip_missing_interpreters = True

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# minimal packages as prescribed by `docs/contributing.md`
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[testenv]
skipsdist=True
basepython =
    dev27: python2.7
    dev36: python3.6
    style27: python2.7
    style36: python3.6
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pycodestyle
commands =
    python setup.py develop
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# These run with single `tox` command or individually with:
# (.venv) $ tox -e dev27
# or
# (.venv) $ tox -e dev36
# Note: Once these virtual environments are run they can be used as the
# development environment by setting the IDE python interpreter accordingly.
# -----------------------------------------------------------------------------
[testenv:dev{27,36}]
deps = {[testenv]deps}
usedevelop = True
commands =
    python -c 'print((80*"~")+"\ntestenv:dev-{basepython}\n"+(80*"~"))'
    # Warning: setup.py test is deprecated and will be removed in a future
    #          version.  It would be better to port testing to tox and remove
    #          it from the setup.py.
    python setup.py test
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# These are not included with the default `tox` run but can be run individually:
# (.venv) $ tox -e style27
# or
# (.venv) $ tox -e style36
# -----------------------------------------------------------------------------
[testenv:style{27,36}]
deps = {[testenv]deps}
usedevelop = True
commands =
    python -c 'print((80*"~")+"\ntestenv:style-{basepython}\n"+(80*"~"))'
    pycodestyle arctic tests

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
